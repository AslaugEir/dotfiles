""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" hlysig
" hlynur sigurthorsson
" hlysig@0x.is
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible

" required by vundle!
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vundle bundles 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Bundle 'gmarik/vundle'
Bundle 'tpope/vim-fugitive'
Bundle 'scrooloose/nerdtree'
Bundle 'flazz/vim-colorschemes'
Bundle 'kien/ctrlp.vim'
Bundle 'klen/python-mode'
Bundle 'Yggdroot/indentLine'
Bundle 'Lokaltog/vim-powerline'
Bundle 'majutsushi/tagbar'
Bundle 'vim-scripts/Emmet.vim'
"Bundle 'vim-scripts/LaTeX-Suite-aka-Vim-LaTeX'
Bundle 'digitaltoad/vim-jade'
Bundle 'scrooloose/syntastic'
Bundle 'groenewege/vim-less'
Plugin 'airblade/vim-gitgutter'


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" GitGutter styling 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

highlight clear SignColumn
highlight GitGutterAdd ctermfg=green guifg=darkgreen
highlight GitGutterChange ctermfg=yellow guifg=darkyellow
highlight GitGutterDelete ctermfg=red guifg=darkred
highlight GitGutterChangeDelete ctermfg=yellow guifg=darkyellow

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Functions and utils that are used in the config. 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Function for toggling mouse between vim and
" the terminal
fun! s:ToggleMouse()
    if !exists("s:old_mouse")
        let s:old_mouse = "a"
    endif

    if &mouse == ""
        let &mouse = s:old_mouse
        echo "Mouse is for Vim (" . &mouse . ")"
    else
        let s:old_mouse = &mouse
        let &mouse=""
        echo "Mouse is for terminal"
    endif
endfunction

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set visualbell t_vb=
set encoding=utf8
set t_Co=256
set ffs=unix,dos,mac

set undofile                " Save undo's after file closes
set undodir=~/.vim/undo     " where to save undo histories
set undolevels=1000         " How many undos
set undoreload=1000         " number of lines to save for undo
set history=700             " Sets how many lines of history VIM 
                            " has to remember

set nowritebackup           " No backup files, no swaps.
set nobackup   
set noswapfile

set autoread                " Set to auto read when a file is 
                            "changed from the outside
filetype on
filetype plugin on          " Enable filetype plugins
filetype indent on


set nu

try
    colorscheme molokai
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme default
endtry

set background=dark

syntax on

set mouse=a

" Enable hidden buffers. 
set hidden

" Set wildmenu when we are <tab> to finish command in command mode.
set wildmenu

" Ignore compiled files
set wildignore=*.o,*~,*.pyc

" Set the vim title in the terminal titlebar. 
set title

" Height of the command bar
set cmdheight=2

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases 
set smartcase

" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch

set tabstop=4
set expandtab
set shiftwidth=4
set softtabstop=4
set ai
set backspace=indent,eol,start
set si "Smart indent
set wrap "Wrap lines


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key mappings 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader = ","
let g:mapleader = ","

nmap <leader>w :w!<cr>
nmap <leader>q :q<cr>

" Bind Enable to toggle line numbers. 
nnoremap <F4> :set nu!<CR>

" Bind F3 to to toggle highlight search.
nnoremap <F3> :set hlsearch!<CR>

" Bind leader n to open NerdTree.
nnoremap <leader>n :NERDTreeToggle .<CR>

" Bind leader p to toggle paste and nopaste
nnoremap <leader>p :set paste!<CR>

" Bind ctrl+t to toggle tagbar.
nmap <C-t> :TagbarToggle<CR>

" Bind leader m to toggle mouse
nnoremap <leader>m :call <SID>ToggleMouse()<CR>
"set mouse=a

" Bind leader w to save. (better then :w when
" I use is keyboard)
nnoremap <leader>w :w<CR>

map <space> /
map <s-space> ?

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

" Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
set viminfo^=%


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Status settings and such.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Always show the status line
set laststatus=2
" Bind leader c to enable to highlight current line.
:hi CursorLine cterm=NONE ctermbg=darkblue ctermfg=white guibg=darkgray guifg=white
:nnoremap <Leader>c :set cursorline!<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set tabs for filetypes. 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd Filetype javascript setlocal nofoldenable colorcolumn=79
autocmd Filetype jade setlocal ts=2 sts=2 sw=2 nofoldenable
autocmd Filetype css setlocal ts=2 sts=2 sw=2 nofoldenable
autocmd Filetype latex setlocal ts=2 sts=2 sw=2 nofoldenable
autocmd Filetype tex setlocal ts=2 sts=2 sw=2 nofoldenable
autocmd Filetype html setlocal ts=2 sts=2 sw=2
autocmd Filetype python set colorcolumn=79
autocmd Filetype python set colorcolumn=79
autocmd FileType make set noexpandtab

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" NerdTree settings. 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let NERDTreeIgnore = ['\.pyc$']
nmap <C-f> :NERDTreeFind<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Settings for LaTeX suit.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:Tex_ViewRule_pdf='Preview'
let g:Tex_AutoFolding = 0

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Powerline configuration
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"let g:Powerline_symbols = 'fancy'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Pymode configuration
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:pymode_folding = 0
nmap <silent> <c-k> :wincmd k<CR>                                                                                                                       
nmap <silent> <c-j> :wincmd j<CR>                                                                                                                       
nmap <silent> <c-h> :wincmd h<CR>                                                                                                                       
nmap <silent> <c-l> :wincmd l<CR>
let g:Tex_DefaultTargetFormat='pdf'
let g:syntastic_javascript_checkers = ['jslint']


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" shortcuts by andrijan 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

imap jk <ESC>
noremap ss :w<CR>
noremap qq :q<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" .less-stuff (groenewege/vim-less)  
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <Leader>m :w <BAR> !lessc % > %:t:r.css<CR><space>
